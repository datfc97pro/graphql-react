{"version":3,"sources":["queries/index.js","components/Recipe/RecipeItem.js","App.js","serviceWorker.js","components/Error.js","components/Auth/Singin.js","components/Auth/Singup.js","components/withSession.js","components/Auth/Signout.js","components/Navbar.js","components/Recipe/SearchItem.js","components/Recipe/Search.js","components/withAuth.js","components/Recipe/AddRecipe.js","Profile/UserInfo.js","Profile/UserRecipes.js","Profile/Profile.js","components/Recipe/LikeRecipe.js","components/Recipe/RecipePage.js","index.js"],"names":["GET_ALL_RECIPES","gql","_templateObject","DELETE_USER_RECIPE","_templateObject2","GET_USER_RECIPES","_templateObject3","LIKE_RECIPE","_templateObject4","UNLIKE_RECIPE","_templateObject5","GET_RECIPE","_templateObject6","SEARCH_RECIPES","_templateObject7","ADD_RECIPE","_templateObject8","GET_CURRENT_USER","_templateObject9","SIGNIN_USER","_templateObject10","SIGNUP_USER","_templateObject11","RecipeItem","_ref","_id","name","category","react_default","a","createElement","Link","to","concat","App","className","react_apollo_browser_umd","query","data","loading","error","getAllRecipes","map","recipe","Object","assign","key","Boolean","window","location","hostname","match","Error","message","initialState","username","password","Signin","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearState","setState","objectSpread","handleChange","e","_e$target","target","value","defineProperty","handleSubmit","signinUser","preventDefault","then","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","localStorage","setItem","token","refetch","history","push","stop","_x","apply","arguments","validateForm","_this$state","state","_this2","_this$state2","mutation","variables","_ref3","onSubmit","type","placeholder","onChange","disabled","Component","withRouter","email","passwordConfirmation","Singup","signupUser","withSession","session","handleSigout","client","removeItem","resetStore","onClick","Navbar","getCurrentUser","Navbar_NavbarAuth","Navbar_NavbarUnAuth","NavbarAuth","Fragment","NavLink","exact","Auth_Signout","NavbarUnAuth","SearchItem","likes","Search","searchRecipes","searchResult","searchTerm","sent","withAuth","conditionFunc","Redirect","instructions","description","AddRecipe","addRecipe","updateCache","cache","readQuery","unshift","writeQuery","update","refetchQueries","formatDate","date","moment","parseInt","format","UserInfo","joinDate","favorites","favorite","length","handleDelete","deleteUserRecipe","confirm","UserRecipes","getUserRecipes","style","marginBottom","_ref4","filter","attrs","undefined","LikeRecipe","handleClick","likeRecipe","unlikeRecipe","prevState","liked","handleLike","_callee2","_context2","_x2","updateLike","_ref5","getRecipe","undateUnlike","_ref6","_this$props$session$g","prevLiked","findIndex","params","Recipe_LikeRecipe","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","authorization","onError","networkError","statusCode","RootWithSession","BrowserRouter","Switch","Route","path","component","render","Singin","Auth_Singup","Recipe_AddRecipe","RecipePage","Profile_Profile","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71204fe0.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ALL_RECIPES = gql`\r\n  query {\r\n    getAllRecipes {\r\n      _id\r\n      name\r\n      category\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_USER_RECIPE = gql`\r\n  mutation($_id: ID!) {\r\n    deleteUserRecipe(_id: $_id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_RECIPES = gql`\r\n  query($username: String!) {\r\n    getUserRecipes(username: $username) {\r\n      _id\r\n      name\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIKE_RECIPE = gql`\r\n  mutation($_id: ID!, $username: String!) {\r\n    likeRecipe(_id: $_id, username: $username) {\r\n      _id\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UNLIKE_RECIPE = gql`\r\n  mutation($_id: ID!, $username: String!) {\r\n    unlikeRecipe(_id: $_id, username: $username) {\r\n      _id\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_RECIPE = gql`\r\n  query($_id: ID!) {\r\n    getRecipe(_id: $_id) {\r\n      _id\r\n      name\r\n      category\r\n      description\r\n      instructions\r\n      createdDate\r\n      likes\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEARCH_RECIPES = gql`\r\n  query($searchTerm: String) {\r\n    searchRecipes(searchTerm: $searchTerm) {\r\n      _id\r\n      name\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_RECIPE = gql`\r\n  mutation(\r\n    $name: String!\r\n    $description: String!\r\n    $category: String!\r\n    $instructions: String!\r\n    $username: String\r\n  ) {\r\n    addRecipe(\r\n      name: $name\r\n      description: $description\r\n      category: $category\r\n      instructions: $instructions\r\n      username: $username\r\n    ) {\r\n      _id\r\n      name\r\n      category\r\n      description\r\n      instructions\r\n      createdDate\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CURRENT_USER = gql`\r\n  query {\r\n    getCurrentUser {\r\n      username\r\n      joinDate\r\n      email\r\n      favorites {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGNIN_USER = gql`\r\n  mutation($username: String!, $password: String!) {\r\n    signinUser(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGNUP_USER = gql`\r\n  mutation($username: String!, $email: String!, $password: String!) {\r\n    signupUser(username: $username, email: $email, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RecipeItem({ _id, name, category }) {\r\n  return (\r\n    <li>\r\n      <Link to={`/recipes/${_id}`}>\r\n        <h4>{name}</h4>\r\n      </Link>\r\n      <p>\r\n        <strong>{category}</strong>\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { GET_ALL_RECIPES } from \"./queries\";\nimport { Query } from \"react-apollo\";\nimport RecipeItem from \"./components/Recipe/RecipeItem\";\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Home</h1>\n    <Query query={GET_ALL_RECIPES}>\n      {({ data, loading, error }) => {\n        if (loading) return <div>Loading</div>;\n        if (error) return <div>Error</div>;\n        return (\n          <ul>\n            {data.getAllRecipes.map(recipe => (\n              <RecipeItem {...recipe} key={recipe._id}/>\n            ))}\n          </ul>\n        );\n      }}\n    </Query>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nexport default function Error({ error }) {\r\n  return <div>{error.message}</div>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { SIGNIN_USER } from \"../../queries\";\r\nimport Error from \"../Error\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\"\r\n};\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...initialState\r\n    };\r\n  }\r\n\r\n  clearState = () => {\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e, signinUser) => {\r\n    e.preventDefault();\r\n\r\n    signinUser().then(async ({ data }) => {\r\n      localStorage.setItem(\"token\", data.signinUser.token);\r\n      await this.props.refetch();\r\n\r\n      this.clearState();\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { username, password } = this.state;\r\n\r\n    const isInvalid = !username || !password;\r\n    return isInvalid;\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h2 className=\"App\">Signin</h2>\r\n        <Mutation mutation={SIGNIN_USER} variables={{ username, password }}>\r\n          {(signinUser, { data, loading, error }) => {\r\n            return (\r\n              <form\r\n                className=\"form\"\r\n                onSubmit={e => this.handleSubmit(e, signinUser)}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username\"\r\n                  onChange={this.handleChange}\r\n                  value={username}\r\n                />\r\n\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  value={password}\r\n                />\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button-primary\"\r\n                  disabled={loading || this.validateForm()}\r\n                >\r\n                  Submit\r\n                </button>\r\n                {error && <Error error={error} />}\r\n              </form>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Signin);\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { SIGNUP_USER } from \"../../queries\";\r\nimport Error from \"../Error\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\"\r\n};\r\n\r\nclass Singup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...initialState\r\n    };\r\n  }\r\n\r\n  clearState = () => {\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e, signupUser) => {\r\n    e.preventDefault();\r\n\r\n    signupUser().then(async ({ data }) => {\r\n      localStorage.setItem(\"token\", data.signinUser.token);\r\n      await this.props.refetch();\r\n\r\n      this.clearState();\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { username, email, password, passwordConfirmation } = this.state;\r\n\r\n    const isInvalid =\r\n      !username || !email || !password || password !== passwordConfirmation;\r\n    return isInvalid;\r\n  };\r\n\r\n  render() {\r\n    const { username, email, password, passwordConfirmation } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h2 className=\"App\">Signup</h2>\r\n        <Mutation\r\n          mutation={SIGNUP_USER}\r\n          variables={{ username, email, password }}\r\n        >\r\n          {(signupUser, { data, loading, error }) => {\r\n            return (\r\n              <form\r\n                className=\"form\"\r\n                onSubmit={e => this.handleSubmit(e, signupUser)}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username\"\r\n                  onChange={this.handleChange}\r\n                  value={username}\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.handleChange}\r\n                  value={email}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  value={password}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"passwordConfirmation\"\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={this.handleChange}\r\n                  value={passwordConfirmation}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button-primary\"\r\n                  disabled={loading || this.validateForm()}\r\n                >\r\n                  Submit\r\n                </button>\r\n                {error && <Error error={error} />}\r\n              </form>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Singup);\r\n","import React from \"react\";\r\n\r\nimport { Query } from \"react-apollo\";\r\nimport { GET_CURRENT_USER } from \"../queries\";\r\n\r\nexport const withSession = Component => props => (\r\n  <Query query={GET_CURRENT_USER}>\r\n    {({ data, loading, refetch }) => {\r\n      if (loading) return null;\r\n      return <Component {...props} refetch={refetch} session={data} />;\r\n    }}\r\n  </Query>\r\n);\r\n","import React from \"react\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst handleSigout = (client, history) => {\r\n  localStorage.removeItem(\"token\");\r\n  client.resetStore();\r\n  history.push(\"/\");\r\n};\r\n\r\nfunction Signout({ history }) {\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => {\r\n        return (\r\n          <button onClick={() => handleSigout(client, history)}>Signout</button>\r\n        );\r\n      }}\r\n    </ApolloConsumer>\r\n  );\r\n}\r\n\r\nexport default withRouter(Signout);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Signout from \"./Auth/Signout\";\r\n\r\nexport default function Navbar({ session }) {\r\n  return (\r\n    <nav>\r\n      {session && session.getCurrentUser ? (\r\n        <NavbarAuth session={session} />\r\n      ) : (\r\n        <NavbarUnAuth />\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst NavbarAuth = ({ session }) => (\r\n  <React.Fragment>\r\n    <ul>\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/search\">Search</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/recipe/add\">Add Recipe</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/profile\">Profile</NavLink>\r\n      </li>\r\n      <li>\r\n        <Signout />\r\n      </li>\r\n    </ul>\r\n    <h4>Wellcome, {session.getCurrentUser.username}</h4>\r\n  </React.Fragment>\r\n);\r\n\r\nconst NavbarUnAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <NavLink to=\"/\" exact>\r\n        Home\r\n      </NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink to=\"/search\">Search</NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink to=\"/signin\">Signin</NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink to=\"/signup\">Signup</NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SearchItem({ _id, name, likes }) {\r\n  return (\r\n    <li>\r\n      <Link to={`recipes/${_id}`}>\r\n        {\" \"}\r\n        <h4>{name}</h4>\r\n      </Link>\r\n      <p>Likes: {likes}</p>\r\n    </li>\r\n  );\r\n}\r\n","import { ApolloConsumer } from \"react-apollo\";\r\nimport { SEARCH_RECIPES } from \"../../queries\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport SearchItem from \"./SearchItem\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchResult: []\r\n    };\r\n  }\r\n\r\n  handleChange = ({ searchRecipes }) => {\r\n    this.setState({\r\n      searchResult: searchRecipes\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchResult } = this.state;\r\n\r\n    return (\r\n      <ApolloConsumer>\r\n        {client => {\r\n          return (\r\n            <div className=\"App\">\r\n              <input\r\n                type=\"search\"\r\n                name=\"searchTerm\"\r\n                placeholder=\"Search for Reicpes\"\r\n                onChange={async e => {\r\n                  const { data } = await client.query({\r\n                    query: SEARCH_RECIPES,\r\n                    variables: { searchTerm: e.target.value }\r\n                  });\r\n\r\n                  this.handleChange(data);\r\n                }}\r\n              />\r\n              <ul>\r\n                {searchResult.map(recipe => (\r\n                  <SearchItem key={recipe._id} {...recipe} />\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          );\r\n        }}\r\n      </ApolloConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nimport { Query } from \"react-apollo\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { GET_CURRENT_USER } from \"../queries\";\r\n\r\nconst withAuth = conditionFunc => Component => props => (\r\n  <Query query={GET_CURRENT_USER}>\r\n    {({ data, loading, error }) => {\r\n      if (loading) return null;\r\n      return conditionFunc(data) ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default withAuth;\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { ADD_RECIPE, GET_ALL_RECIPES, GET_USER_RECIPES } from \"../../queries\";\r\nimport Error from \"../Error\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport withAuth from \"../withAuth\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  instructions: \"\",\r\n  category: \"Breakfast\",\r\n  description: \"\",\r\n  username: \"\"\r\n};\r\n\r\nclass AddRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...initialState\r\n    };\r\n  }\r\n\r\n  clearState = () => {\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      username: this.props.session.getCurrentUser.username\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e, addRecipe) => {\r\n    e.preventDefault();\r\n\r\n    addRecipe().then(({ data }) => {\r\n      this.clearState();\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  updateCache = (cache, { data: { addRecipe } }) => {\r\n    const data = cache.readQuery({ query: GET_ALL_RECIPES });\r\n\r\n    data.getAllRecipes.unshift(addRecipe);\r\n\r\n    cache.writeQuery({\r\n      query: GET_ALL_RECIPES,\r\n      data\r\n    });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, category, description, instructions } = this.state;\r\n\r\n    const isInvalid = !name || !category || !description || !instructions;\r\n    return isInvalid;\r\n  };\r\n\r\n  render() {\r\n    const { name, category, description, instructions, username } = this.state;\r\n\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_RECIPE}\r\n        variables={{ name, category, description, instructions, username }}\r\n        update={this.updateCache}\r\n        refetchQueries={() => [\r\n          { query: GET_USER_RECIPES, variables: { username } }\r\n        ]}\r\n      >\r\n        {(addRecipe, { data, loading, error }) => {\r\n          return (\r\n            <div className=\"App\">\r\n              <h2 className=\"App\">Add Recipe</h2>\r\n              <form\r\n                className=\"form\"\r\n                onSubmit={e => this.handleSubmit(e, addRecipe)}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Recipe name\"\r\n                  onChange={this.handleChange}\r\n                  value={name}\r\n                />\r\n\r\n                <select\r\n                  name=\"category\"\r\n                  onChange={this.handleChange}\r\n                  value={category}\r\n                >\r\n                  <option value=\"Breakfast\">Breakfast</option>\r\n                  <option value=\"Lunch\">Lunch</option>\r\n                  <option value=\"Dinner\">Dinner</option>\r\n                  <option value=\"Snack\">Snack</option>\r\n                </select>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Add description\"\r\n                  value={description}\r\n                />\r\n\r\n                <textarea\r\n                  name=\"instructions\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Add instructions\"\r\n                  value={instructions}\r\n                />\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button-primary\"\r\n                  disabled={loading || this.validateForm()}\r\n                >\r\n                  Submit\r\n                </button>\r\n                {error && <Error error={error} />}\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(session => session && session.getCurrentUser)(\r\n  withRouter(AddRecipe)\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst formatDate = date => {\r\n  const newDate = moment(parseInt(date)).format(\"Do MMM YYYY\");\r\n  return newDate;\r\n};\r\n\r\nexport default function UserInfo({ session }) {\r\n  return (\r\n    <div>\r\n      <h3>User Info</h3>\r\n      <p>Username: {session.getCurrentUser.username}</p>\r\n      <p>Email: {session.getCurrentUser.email}</p>\r\n      <p>Join Date: {formatDate(session.getCurrentUser.joinDate)}</p>\r\n      <ul>\r\n        <h3>{session.getCurrentUser.username}'s Favorites</h3>\r\n\r\n        {session.getCurrentUser.favorites.map(favorite => (\r\n          <li key={favorite._id}>\r\n            <Link to={`/recipes/${favorite._id}`}>\r\n              <p>{favorite.name}</p>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n\r\n        {!session.getCurrentUser.favorites.length && (\r\n          <p>\r\n            <strong>You have no favorites currently. Go add some!</strong>\r\n          </p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport {\r\n  GET_USER_RECIPES,\r\n  DELETE_USER_RECIPE,\r\n  GET_ALL_RECIPES,\r\n  GET_CURRENT_USER\r\n} from \"../queries\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst handleDelete = deleteUserRecipe => {\r\n  const confirmDelete = window.confirm(\r\n    \"Are you sure you want to delete this recipe?\"\r\n  );\r\n\r\n  if (confirmDelete) {\r\n    deleteUserRecipe().then(({ data }) => {});\r\n  }\r\n};\r\n\r\nexport default function UserRecipes({ username }) {\r\n  return (\r\n    <Query query={GET_USER_RECIPES} variables={{ username }}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <div>Loading</div>;\r\n        if (error) return <div>Error</div>;\r\n        return (\r\n          <ul>\r\n            <h3>You Recipes</h3>\r\n            {!data.getUserRecipes.length && (\r\n              <p>\r\n                <strong>You have not added any recipes yet</strong>\r\n              </p>\r\n            )}\r\n\r\n            {data.getUserRecipes.map(recipe => (\r\n              <li key={recipe._id}>\r\n                <Link to={`/recipes/${recipe._id}`}>\r\n                  <p>{recipe.name}</p>\r\n                </Link>\r\n                <p style={{ marginBottom: \"0\" }}>Likes: {recipe.likes}</p>\r\n\r\n                <Mutation\r\n                  mutation={DELETE_USER_RECIPE}\r\n                  variables={{ _id: recipe._id }}\r\n                  refetchQueries={() => [\r\n                    { query: GET_ALL_RECIPES },\r\n                    { query: GET_CURRENT_USER }\r\n                  ]}\r\n                  update={(cache, { data: { deleteUserRecipe } }) => {\r\n                    const { getUserRecipes } = cache.readQuery({\r\n                      query: GET_USER_RECIPES,\r\n                      variables: { username }\r\n                    });\r\n\r\n                    cache.writeQuery({\r\n                      query: GET_USER_RECIPES,\r\n                      variables: { username },\r\n                      data: {\r\n                        getUserRecipes: getUserRecipes.filter(\r\n                          recipe => recipe._id !== deleteUserRecipe._id\r\n                        )\r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                  {(deleteUserRecipe, attrs = {}) => {\r\n                    return (\r\n                      <p\r\n                        className=\"delete-button\"\r\n                        onClick={() => handleDelete(deleteUserRecipe)}\r\n                      >\r\n                        {attrs.loading ? \"deleting...\" : \"X\"}\r\n                      </p>\r\n                    );\r\n                  }}\r\n                </Mutation>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport UserRecipes from \"./UserRecipes\";\r\nimport withAuth from \"../components/withAuth\";\r\n\r\nfunction Profile({ session }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <UserInfo session={session} />\r\n      <UserRecipes username={session.getCurrentUser.username} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuth(session => session && session.getCurrentUser)(Profile);\r\n","import React, { Component } from \"react\";\r\nimport { withSession } from \"../withSession\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { LIKE_RECIPE, GET_RECIPE, UNLIKE_RECIPE } from \"../../queries\";\r\n\r\nclass LikeRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      liked: false,\r\n      username: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.session.getCurrentUser) {\r\n      const { username, favorites } = this.props.session.getCurrentUser;\r\n      const { _id } = this.props;\r\n      const prevLiked =\r\n        favorites.findIndex(favorite => favorite._id === _id) > -1;\r\n\r\n      this.setState({\r\n        username,\r\n        liked: prevLiked\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick = (likeRecipe, unlikeRecipe) => {\r\n    this.setState(\r\n      prevState => ({\r\n        liked: !prevState.liked\r\n      }),\r\n      () => this.handleLike(likeRecipe, unlikeRecipe)\r\n    );\r\n  };\r\n\r\n  handleLike = (likeRecipe, unlikeRecipe) => {\r\n    if (this.state.liked) {\r\n      likeRecipe().then(async ({ data }) => {\r\n        await this.props.refetch();\r\n      });\r\n    } else {\r\n      unlikeRecipe().then(async ({ data }) => {\r\n        await this.props.refetch();\r\n      });\r\n    }\r\n  };\r\n\r\n  updateLike = (cache, { data: { likeRecipe } }) => {\r\n    const { _id } = this.props;\r\n    const { getRecipe } = cache.readQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id }\r\n    });\r\n\r\n    cache.writeQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id },\r\n      data: {\r\n        getRecipe: { ...getRecipe, likes: likeRecipe.likes + 1 }\r\n      }\r\n    });\r\n  };\r\n\r\n  undateUnlike = (cache, { data: { unlikeRecipe } }) => {\r\n    const { _id } = this.props;\r\n    const { getRecipe } = cache.readQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id }\r\n    });\r\n\r\n    cache.writeQuery({\r\n      query: GET_RECIPE,\r\n      variables: { _id },\r\n      data: {\r\n        getRecipe: { ...getRecipe, likes: unlikeRecipe.likes - 1 }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { username } = this.state;\r\n    const { _id } = this.props;\r\n\r\n    return (\r\n      <Mutation\r\n        mutation={UNLIKE_RECIPE}\r\n        variables={{ _id, username }}\r\n        //update={this.undateUnlike}\r\n      >\r\n        {unlikeRecipe => (\r\n          <Mutation\r\n            mutation={LIKE_RECIPE}\r\n            variables={{ _id, username }}\r\n            //update={this.updateLike}\r\n          >\r\n            {likeRecipe =>\r\n              username && (\r\n                <button\r\n                  onClick={() => this.handleClick(likeRecipe, unlikeRecipe)}\r\n                >\r\n                  {this.state.liked ? \"Unlike\" : \"Like\"}\r\n                </button>\r\n              )\r\n            }\r\n          </Mutation>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSession(LikeRecipe);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query } from \"react-apollo\";\r\nimport { GET_RECIPE } from \"../../queries\";\r\nimport LikeRecipe from \"./LikeRecipe\";\r\n\r\nfunction RecipePage({ match }) {\r\n  const { _id } = match.params;\r\n\r\n  return (\r\n    <Query query={GET_RECIPE} variables={{ _id }}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <div>Loading</div>;\r\n        if (error) return <div>Error</div>;\r\n\r\n        return (\r\n          <div className=\"App\">\r\n            <h2>{data.getRecipe.name}</h2>\r\n            <p>Category: {data.getRecipe.category}</p>\r\n            <p>Descriptions: {data.getRecipe.description}</p>\r\n            <p>Instructions: {data.getRecipe.instructions}</p>\r\n            <p>Likes: {data.getRecipe.likes}</p>\r\n            <p>Created By: {data.getRecipe.username}</p>\r\n            <LikeRecipe _id={_id} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n}\r\n\r\nexport default withRouter(RecipePage);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Singin from \"./components/Auth/Singin\";\nimport Singup from \"./components/Auth/Singup\";\nimport { withSession } from \"./components/withSession\";\nimport Navbar from \"./components/Navbar\";\nimport Search from \"./components/Recipe/Search\";\nimport AddRecipe from \"./components/Recipe/AddRecipe\";\nimport Profile from \"./Profile/Profile\";\nimport RecipePage from \"./components/Recipe/RecipePage\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"token\");\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ networkError }) => {\n    if (networkError) {\n\n      if (networkError.statusCode === 401) {\n        localStorage.removeItem(\"token\");\n      }\n    }\n  }\n});\n\nconst Root = ({ refetch, session }) => (\n  <Router>\n    <React.Fragment>\n      <Navbar session={session} />\n      <Switch>\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/signin\" render={() => <Singin refetch={refetch} />} />\n        <Route path=\"/signup\" render={() => <Singup refetch={refetch} />} />\n        <Route\n          path=\"/recipe/add\"\n          render={() => <AddRecipe session={session} />}\n        />\n        <Route path=\"/recipes/:_id\" component={RecipePage} />\n        <Route path=\"/profile\" render={() => <Profile session={session} />} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </React.Fragment>\n  </Router>\n);\n\nconst RootWithSession = withSession(Root);\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <RootWithSession />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}